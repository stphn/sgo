@mixin fontFace($family, $src, $style: normal, $weight: 400) {

	/*
	 * Including a font with different weights:
	 * @include fontFace('FontName', '../fonts/regular', normal, 400);
	 * @include fontFace('FontName', '../fonts/light', normal, 300);
	 * @include fontFace('FontName', '../fonts/bold', normal, 700);
	 */

	@font-face {
		font-family: $family;
		src: url('#{$src}.woff2') format('woff2'), url('#{$src}.woff') format('woff');
		font-style: $style;
		font-weight: $weight;
	}

}

@mixin headlines() {

	h1, .h1,
	h2, .h2,
	h3, .h3,
	h4, .h4,
	h5, .h5,
	h6, .h6 {
		@content;
	}

}

@mixin text() {

	p,
	address,
	ol,
	ul,
	label,
	blockquote {
		@content;
	}

}

//  Material Shadows Mixin -------------------------------------------------------------- //

// Gives a card depth effect.
// param {Number} $depth - depth level (between 1 and 5)
// link http://www.google.com/design/spec/layout/layout-principles.html#layout-principles-dimensionality Google Design
// requires {function} top-shadow
// requires {function} bottom-shadow

@mixin card($depth) {
  @if $depth < 1 {
    box-shadow: none;
  } @else if $depth > 5 {
    @warn "Invalid $depth `#{$depth}` for mixin `card`.";
  } @else {
    box-shadow: bottom-shadow($depth), top-shadow($depth);
  }
}
/// Computes a top-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}

@function top-shadow($depth) {
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

  @return 0 $primary-offset $blur $color;
}

/// Computes a bottom-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function bottom-shadow($depth) {
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $blur: nth(1 3 3 5 6, $depth) * 4px;
  $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

  @return 0 $primary-offset $blur $color;
}
